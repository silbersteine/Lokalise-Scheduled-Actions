name: Push to Lokalise
run-name: Push to Lokalise [${{ github.ref_name }}] ${{ github.event.after }}

on:
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * 3,5'

env:
  VAR_BRANCH_NAME: ${{ vars.BRANCH }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/${{ vars.BRANCH }}'  # Ensure the job runs only on the specified branch
    env:
        GITHUB_PREVIOUS_COMMIT: ${{ github.event.after }}
        GITHUB_CURRENT_COMMIT: ${{ github.event.before }}
        VAR_LOKALISE_API_TOKEN: ${{ secrets.API_TOKEN }}
        VAR_LOKALISE_PROJECT_ID: ${{ vars.PROJECT_ID }}
        VAR_LOKALISE_SOURCE_LANG_ISO: ${{ vars.SOURCE_LANG }}
        VAR_FOLDER_PATH: ${{ vars.FOLDER_PATH }}
        
    steps:
      - uses: actions/checkout@v3
      
      # Download and install the Lokalise CLI tool
      - name: Install Lokalise CLI
        run: curl -sfL https://raw.githubusercontent.com/lokalise/lokalise-cli-2-go/master/install.sh | sh

      # Process each JSON file listed by `git ls-files` in folder path ${{ vars.FOLDER_PATH }} and upload to Lokalise  
      - name: Push localization files to Lokalise
        run: |
          while read file 
          do 
            if [ -f $file ]
            then
              ./bin/lokalise2 --token="${{ env.VAR_LOKALISE_API_TOKEN }}" \
                --project-id="${{ env.VAR_LOKALISE_PROJECT_ID }}" \
                file upload \
                --file="$file" \
                --lang-iso="${{ env.VAR_LOKALISE_SOURCE_LANG_ISO }}" \
                --replace-modified \
                --include-path \
                --use-automations=true \
                --distinguish-by-file \
                --poll \
                --poll-timeout=120s \
                --tag-inserted-keys \
                --tag-skipped-keys=true \
                --tag-updated-keys \
                --tags ${{ github.ref_name }} 
            fi
          done < <(git ls-files "${{ env.VAR_FOLDER_PATH }}/${{ env.VAR_LOKALISE_SOURCE_LANG_ISO }}/**.json")
